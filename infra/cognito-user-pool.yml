Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    # DeletionPolicy: Retain # TODO: FOR PROD UNCOMMENT ME
    Properties:
      UserPoolName: trakerapp-infra-${self:provider.stage}-user-pool
      MfaConfiguration: OFF
      Schema:
        - Name: email
          Required: true
          Mutable: true
        - Name: name
          Required: false
          Mutable: true
        - Name: plan_name
          AttributeDataType: String
          Required: false
          Mutable: true
        - Name: accepts_tos
          AttributeDataType: Boolean
          Required: false
          Mutable: true
      Policies:
        PasswordPolicy:
          MinimumLength: 6
      AutoVerifiedAttributes: ["email"]
      UsernameAttributes:
        - email
  UserClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: trakerapp-infra-${self:provider.stage}-user-pool-client
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: UserPool
  # ApiGatewayAuthorizer:
  #   DependsOn:
  #     - ApiGatewayRestApi
  #   Type: AWS::ApiGateway::Authorizer
  #   Properties:
  #     Name: cognito-authorizer
  #     IdentitySource: method.request.header.Authorization
  #     RestApiId:
  #       Ref: ApiGatewayRestApi
  #     Type: COGNITO_USER_POOLS
  #     ProviderARNs:
  #       - Fn::GetAtt: [CognitoUserPool, Arn]
  # https://github.com/davidgf/serverless-cognito/blob/master/serverless.yml
  # https://medium.com/@Da_vidgf/using-cognito-for-users-management-in-your-serverless-application-1695fec9e225
